var t,o,n;!function(t){t[t.topLeft=1]="topLeft",t[t.topRight=2]="topRight",t[t.bottomRight=-1]="bottomRight",t[t.bottomLeft=-2]="bottomLeft"}(t||(t={})),function(t){t.top="top",t.right="right",t.bottom="bottom",t.left="left"}(o||(o={})),function(t){t[t.OR=0]="OR",t[t.QD1=1]="QD1",t[t.QD2=2]="QD2",t[t.QD3=3]="QD3",t[t.QD4=4]="QD4"}(n||(n={}));const e={[o.top]:[t.topRight,t.bottomRight,t.topLeft],[o.right]:[t.bottomRight,t.bottomLeft,t.topRight],[o.bottom]:[t.bottomLeft,t.topLeft,t.bottomRight],[o.left]:[t.topLeft,t.topRight,t.bottomLeft]};function i(t){return{x:t.left+t.width/2,y:t.top+t.height/2}}function h(o,n){return{[t.topLeft]:()=>({x:o.left,y:o.top}),[t.topRight]:()=>({x:o.left+o.width,y:o.top}),[t.bottomRight]:()=>({x:o.left+o.width,y:o.top+o.height}),[t.bottomLeft]:()=>({x:o.left,y:o.top+o.height})}[n]()}function r(t,o){return f(h(o,t),i(o),o.ro)}function f(t,o,n){return{x:t.x*s(n)-t.y*b(n)-o.x*s(n)+o.y*b(n)+o.x,y:t.x*b(n)+t.y*s(n)-o.x*b(n)-o.y*s(n)+o.y}}function x(t,o,n){return{x:t.x*s(n)+t.y*b(n)-o.x*s(n)-o.y*b(n)+o.x,y:-t.x*b(n)+t.y*s(n)+o.x*b(n)-o.y*s(n)+o.y}}function y(o,n,e,i){let h={left:0,top:0};const r={width:2*Math.abs(n.x-o.x),height:2*Math.abs(n.y-o.y),ro:e};return i===t.topLeft&&(h={left:o.x,top:o.y}),i===t.topRight&&(h={left:o.x-r.width,top:o.y}),i===t.bottomLeft&&(h={left:o.x,top:o.y-r.height}),i===t.bottomRight&&(h={left:o.x-r.width,top:o.y-r.height}),Object.assign(Object.assign({},h),r)}function u(o,n,e,i){let h={left:0,top:0};const r={width:Math.abs(n.x-o.x),height:Math.abs(n.y-o.y),ro:e};return i===t.topLeft&&(h={left:o.x,top:o.y}),i===t.topRight&&(h={left:n.x-r.width,top:n.y}),i===t.bottomLeft&&(h={left:n.x,top:n.y-r.height}),i===t.bottomRight&&(h={left:n.x-r.width,top:n.y-r.height}),Object.assign(Object.assign({},h),r)}function c(t,o){return{x:t.x+(o.x-t.x)/2,y:t.y+(o.y-t.y)/2}}function g(t){return t/360*2*Math.PI}function p(t){return 360*t/(2*Math.PI)}function s(t){return Math.cos(g(t))}function b(t){return Math.sin(g(t))}function a(t){return Math.pow(t,2)}function l(t,o){return{x:o.x-t.x,y:o.y-t.y}}function m(t,o){return(t.x*o.x+t.y*o.y)/Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))}function R(t,o){const n=Math.sqrt(a(o)/(a(t.x)+a(t.y)));return o>=0?{x:n*t.x,y:n*t.y}:{x:-n*t.x,y:-n*t.y}}function w(t,o){return{x:t.x+o.x,y:t.y+o.y}}function L(t){return Math.sqrt(a(t.x)+a(t.y))}function d(t,o){return{x:t.x-o.x,y:t.y-o.y}}function M(t,o){return n=(t.x*o.x+t.y*o.y)/(L(t)*L(o)),p(Math.acos(n));var n}function O(t,o,n){const e=c(r(-t,n),o);return y(x(o,e,n.ro),e,n.ro,t)}function D(o,n,e){const i=e.width/e.height,h=r(-o,e);let u=c(h,n),g=x(n,u,e.ro);const p=y(g,u,e.ro,o);if(p.width/p.height>i){const n=p.width-p.height*i;[t.topRight,t.bottomRight].indexOf(o)>-1?g.x-=n:g.x+=n}else{const n=p.height-p.width/i;[t.topLeft,t.topRight].indexOf(o)>-1?g.y+=n:g.y-=n}return g=f(g,u,e.ro),function(t,o,n,e){const i=c(o,t);return y(x(t,i,e),i,e,n)}(g,h,o,e.ro)}function Q(t,o,n,e){return(t?D:O)(o,n,e)}function j(t,n,i){const h=r(e[t][1],i),f=r(e[t][0],i),u=l(h,n),g=l(h,f),p=m(u,g);let s,b,a;s=R(g,p>0?p:1),a=t===o.top||t===o.bottom?i.width:i.height,b=R({x:g.y,y:-g.x},a);const L=w(b,s),d={x:L.x+h.x,y:L.y+h.y},M=c(h,d);return y(x(d,M,i.ro),M,i.ro,e[t][2])}function q(t,o){const n=d(t,i(o));let e=M({x:0,y:-1},n);return e=n.x>0?e:360-e,Object.assign(Object.assign({},o),{ro:e})}export{t as Corner,o as Edge,n as Quadrant,e as ScrapEdgeMap,s as cos,p as getAngleByRadian,c as getCenterDot,h as getCornerByRect,L as getNorm,i as getOriginByRect,g as getRadianByAngle,u as getRectByAcrossCorner,y as getRectByOrigin,r as getRotatedCorner,m as getShadow,M as getVectorAngle,R as getVectorByModal,x as inversionRotateMatrix,w as plusVector,q as rotateFree,f as rotateMatrix,b as sin,d as subVector,l as vectorInDot1,Q as zoomCorner,j as zoomEdgeFree,O as zoomFreeCornerFree,D as zoomLockCornerFree};
